67. Add Binary

class Solution {
    public String addBinary(String a, String b) 
    {
        StringBuilder ans = new StringBuilder();
        int i=a.length()-1;
        int j=b.length()-1;
        int carry =0;

        while(i >=0 || j>=0 || carry >0){
            int sum=carry;

            if(i>=0){
                sum +=a.charAt(i--) - '0';
            }
            if(j>=0){
                sum +=b.charAt(j--) -'0';
            }
            carry = sum/2;
            ans.append(sum%2);
        }       
        return ans.reverse().toString();
    }
}

190. Reverse Bits

public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        int result =0;

        for(int i=0;i<32;i++){
            result <<= 1;
            result |=(n&1);
            n >>>= 1;
        }
        return result;
        
    }
}

191. Number of 1 Bits

class Solution {
    public int hammingWeight(int n) 
    {
        int count =0;

        while(n !=0){
            n = n & (n-1);
            count++;
        }
        return count;
        
    }
}
