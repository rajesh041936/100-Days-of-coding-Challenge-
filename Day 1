1929. Concatenation of Array

class Solution {
    public int[] getConcatenation(int[] nums) {
        int n =nums.length;
        int ans[] =new int[2*n];

        for(int i=0;i<n;i++){
            ans[i] = nums[i];
            ans[i+n]=nums[i];
        }
        return ans;
    }
}

1480. Running Sum of 1d Array

class Solution {
    public int[] runningSum(int[] nums) {
        int n = nums.length;
        int[] arr = new int[n];
        arr[0] = nums[0];
        for (int i = 1; i < n; i++) {
            arr[i] = nums[i] + arr[i - 1];
        }
        return arr;
    }
}

1672. Richest Customer Wealth

class Solution {
    public int maximumWealth(int[][] accounts) {
        
        int sum=0;
        for(int i =0;i<accounts.length;i++)
        {
            int currentsum=0;
            for(int j=0;j<accounts[i].length;j++){
                currentsum +=accounts[i][j];
            }
            sum = Math.max(sum,currentsum);
        }
        return sum;
    }
}
