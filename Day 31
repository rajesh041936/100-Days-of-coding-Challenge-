1342. Number of Steps to Reduce a Number to Zero

class Solution {
    public int numberOfSteps(int num) 
    {
        return helper( num,0);       
    }
    private int helper(int num,int steps){
        if(num ==0){
            return steps;
        }
        if(num%2==0){
            return helper(num/2,steps+1);
        }
        return helper(num-1,steps+1);
    }
}

509. Fibonacci Number

class Solution {
    public int fib(int n) {
        if(n == 0 || n==1) return n;
        int[] dp = new int[n+1];
        dp[0] = 0;
        dp[1] = 1;
        for(int i=2; i<=n; i++)
            dp[i] = dp[i-1]+dp[i-2];
        return dp[n];
    }
}

326. Power of Three

class Solution {
    public boolean isPowerOfThree(int n) {
        int maxPowerOf3 = 1162261467; 
return (n > 0) && (maxPowerOf3 % n == 0);

    }
}
