367. Valid Perfect Square

class Solution {
    public boolean isPerfectSquare(int num) {
        if (num == 1) return true;

        long low = 1, high = num / 2;

        while (low <= high) {
            long mid = low + (high - low) / 2;
            long square = mid * mid;

            if (square == num) return true;
            else if (square < num) low = mid + 1;
            else high = mid - 1;
        }

        return false;
    }
}


264. Ugly Number II

class Solution {
    public int nthUglyNumber(int n) 
    {
        int[] result=new int[n];
        result[0]=1;

        int i2=0,i3=0,i5=0;
        for(int i=1;i<n;i++){
            int next2=result[i2]*2;
            int next3=result[i3]*3;
            int next5=result[i5]*5;

            int uglynumber=Math.min(next2,(Math.min(next3,next5)));
            result[i]=uglynumber;

            if(uglynumber==next2) i2++;
            if(uglynumber==next3) i3++;
            if(uglynumber==next5) i5++;
        }
        return result[n-1];
    }
}

412. Fizz Buzz

import java.util.*;

class Solution {
    public List<String> fizzBuzz(int n) {
        List<String> result = new ArrayList<>();

        for (int i = 1; i <= n; i++) {
            if (i % 3 == 0 && i % 5 == 0) {
                result.add("FizzBuzz");
            } else if (i % 3 == 0) {
                result.add("Fizz");
            } else if (i % 5 == 0) {
                result.add("Buzz");
            } else {
                result.add(String.valueOf(i));
            }
        }

        return result;
    }
}

