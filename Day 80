2053. Kth Distinct String in an Array


class Solution {
    public String kthDistinct(String[] arr, int k) {
        Map<String, Integer> freq = new HashMap<>();
        
        for (String s : arr) {
            freq.put(s, freq.getOrDefault(s, 0) + 1);
        }
        
        int count = 0;
        for (String s : arr) {
            if (freq.get(s) == 1) {
                count++;
                if (count == k) {
                    return s;
                }
            }
        }
                return "";
    }
}


2103. Rings and Rods


class Solution {
    public int countPoints(String rings) {
        Set<Character>[] rods = new HashSet[10];
        for (int i = 0; i < 10; i++) {
            rods[i] = new HashSet<>();
        }
        for (int i = 0; i < rings.length(); i += 2) {
            char color = rings.charAt(i);
            int rod = rings.charAt(i + 1) - '0';
            rods[rod].add(color);
        }
        int count = 0;
        for (int i = 0; i < 10; i++) {
            if (rods[i].size() == 3) {
                count++;
            }
        }

        return count;
    }
}


2418. Sort the People


class Solution {
    public String[] sortPeople(String[] names, int[] heights) {
        int n = names.length;
        Integer[] indices = new Integer[n];
        
        for (int i = 0; i < n; i++) indices[i] = i; 
        Arrays.sort(indices, (a, b) -> heights[b] - heights[a]);       
        String[] result = new String[n];
        for (int i = 0; i < n; i++) {
            result[i] = names[indices[i]];
        }
        
        return result;
    }
}
