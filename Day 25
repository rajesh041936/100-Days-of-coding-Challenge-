401. Binary Watch

class Solution {
    public List<String> readBinaryWatch(int turnedOn) {
        List<String> result = new ArrayList();

        for(int hour = 0; hour < 12; hour++) {
            for(int minute = 0; minute < 60; minute++) {
                if(Integer.bitCount(hour) + Integer.bitCount(minute) == turnedOn) {
                    StringBuilder b = new StringBuilder();
                    b.append(hour);
                    b.append(':');

                    if(minute < 10) {
                        b.append('0');
                    }

                    b.append(minute);

                    result.add(b.toString());
                }
            }
        }

        return result;
    }
}

338. Counting Bits

class Solution {
    public int[] countBits(int n) {
        int[] res = new int[n + 1];

        for (int i = 1; i <= n; i++) {
            res[i] = res[i >> 1] + (i & 1);
        }

        return res;
    }
}


476. Number Complement

class Solution {
    public int findComplement(int num) {
        int mask = (Integer.highestOneBit(num) << 1) - 1;
        return num ^ mask;
    }
}
